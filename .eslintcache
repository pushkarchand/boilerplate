[{"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\index.tsx":"1","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\reportWebVitals.ts":"2","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\App.tsx":"3","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\reducer.ts":"4","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\notify.tsx":"5","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\authContext.tsx":"6","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\theme.tsx":"7","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\fallback.tsx":"8","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\register.tsx":"9","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\login.tsx":"10","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\action.ts":"11","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\landing.tsx":"12","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\reactive.tsx":"13","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\template.tsx":"14","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\api.tsx":"15","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\header.tsx":"16","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\teammates\\index.tsx":"17","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\sidebar.tsx":"18","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\constants.ts":"19","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\roles\\index.tsx":"20","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\companies\\index.tsx":"21","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\projects\\index.tsx":"22","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\index.tsx":"23","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\index.tsx":"24","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\graphql.ts":"25","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\graphql-models\\projects.ts":"26","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\projectItem.tsx":"27","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\role.ts":"28","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\authservice.ts":"29","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\models\\token.ts":"30","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\grqphql-queries\\project.ts":"31","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\permission.ts":"32"},{"size":746,"mtime":1613381329467,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":1838,"mtime":1613452900943,"results":"36","hashOfConfig":"34"},{"size":769,"mtime":1613452848249,"results":"37","hashOfConfig":"34"},{"size":1375,"mtime":1611685138341,"results":"38","hashOfConfig":"34"},{"size":85,"mtime":1611684935011,"results":"39","hashOfConfig":"34"},{"size":114,"mtime":1611660505338,"results":"40","hashOfConfig":"34"},{"size":124,"mtime":1611683953843,"results":"41","hashOfConfig":"34"},{"size":5985,"mtime":1611684617220,"results":"42","hashOfConfig":"34"},{"size":6867,"mtime":1613452971083,"results":"43","hashOfConfig":"34"},{"size":488,"mtime":1611686507266,"results":"44","hashOfConfig":"34"},{"size":682,"mtime":1611688020569,"results":"45","hashOfConfig":"34"},{"size":2227,"mtime":1612867932504,"results":"46","hashOfConfig":"34"},{"size":858,"mtime":1612420695191,"results":"47","hashOfConfig":"34"},{"size":2982,"mtime":1613414794476,"results":"48","hashOfConfig":"34"},{"size":1960,"mtime":1612260137868,"results":"49","hashOfConfig":"34"},{"size":185,"mtime":1612328058201,"results":"50","hashOfConfig":"34"},{"size":1998,"mtime":1612420862708,"results":"51","hashOfConfig":"34"},{"size":1877,"mtime":1613409223389,"results":"52","hashOfConfig":"34"},{"size":143,"mtime":1612327773431,"results":"53","hashOfConfig":"34"},{"size":151,"mtime":1612327780251,"results":"54","hashOfConfig":"34"},{"size":616,"mtime":1613416146860,"results":"55","hashOfConfig":"34"},{"size":407,"mtime":1612327826322,"results":"56","hashOfConfig":"34"},{"size":2426,"mtime":1612418304867,"results":"57","hashOfConfig":"34"},{"size":2209,"mtime":1613416942657,"results":"58","hashOfConfig":"34"},{"size":463,"mtime":1613415214315,"results":"59","hashOfConfig":"34"},{"size":476,"mtime":1613416233199,"results":"60","hashOfConfig":"34"},{"size":2132,"mtime":1613190806116,"results":"61","hashOfConfig":"34"},{"size":1145,"mtime":1613415503463,"results":"62","hashOfConfig":"34"},{"size":2061,"mtime":1613409586327,"results":"63","hashOfConfig":"34"},{"size":969,"mtime":1613415544194,"results":"64","hashOfConfig":"34"},{"size":261,"mtime":1613415507254,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1uxv74n",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\index.tsx",[],["136","137"],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\reportWebVitals.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\App.tsx",["138","139","140","141"],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\reducer.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\notify.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\authContext.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\theme.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\fallback.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\register.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\login.tsx",["142"],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\action.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\landing.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\reactive.tsx",["143"],"import * as React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport './reactive.css';\r\nimport {formTemplates} from '../../utils/constants';\r\n\r\nexport default function ReactiveForm() {\r\n  const { register, handleSubmit,errors } = useForm();\r\n  const onSubmit = (data: any) =>{\r\n    //  alert(JSON.stringify(data));\r\n    debugger;\r\n     console.log(errors);\r\n    };\r\n\r\n  const renderFields=()=>{\r\n    return formTemplates.map((item:any)=>{\r\n      let {name, type, label, validationProps, placeholder} = item;\r\n      switch(type){\r\n        case 'text':\r\n          return(\r\n            <div key={name} className=\"formItem\">\r\n                <label>{label}</label>\r\n                <input type=\"text\" name={name} id={name} ref={register({\r\n                  required: validationProps.required,\r\n                  pattern: validationProps?.pattern\r\n                })} placeholder={placeholder} />\r\n                {errors[name] && <span className=\"errorMessage\">{errors[name]['message']}</span>}\r\n            </div>\r\n          )\r\n        case 'number':\r\n          return(\r\n            <div key={name} className=\"formItem\">\r\n                <label>{label}</label>\r\n                <input type=\"number\" name={name} id={name} ref={register({\r\n                  required: validationProps.required\r\n                })} placeholder={placeholder} />\r\n                {errors[name] && <span className=\"errorMessage\">{JSON.stringify(errors[name].type)}</span>}\r\n            </div>\r\n          )\r\n        case 'email':\r\n        return(\r\n            <div key={name} className=\"formItem\">\r\n                <label>{label}</label>\r\n                <input type=\"email\" name={name} id={name} ref={register({\r\n                  required: validationProps.required,pattern: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/\r\n                })} placeholder={placeholder} />\r\n                {errors[name] && <span className=\"errorMessage\">{errors[name]['message']}</span>}\r\n            </div>\r\n          )\r\n      }\r\n     \r\n    })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n          {renderFields()}\r\n          <button type=\"button\" onClick={(e)=>onSubmit(e)}>click</button>\r\n          <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\template.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\api.tsx",["144"],"import {getToken} from './authservice';\r\nconst axios = require('axios');\r\nconst axiosApiInstance = axios.create();\r\n\r\n// Request interceptor for API calls\r\naxiosApiInstance.interceptors.request.use(\r\n  async (config: { headers: { Authorization: string; 'Content-Type': string; 'Access-Control-Allow-Origin': string}; }) => {\r\n    const tokenStr=getToken();\r\n    config.headers = { \r\n      'Authorization': `Bearer ${tokenStr}`,\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*'\r\n    }\r\n    return config;\r\n  },\r\n    (  error: any) => {\r\n    Promise.reject(error)\r\n});\r\n\r\n// Response interceptor for API calls\r\n// Checks for the error response and if the satus is 401\r\n// then Fetch the token and retry the original request again\r\naxiosApiInstance.interceptors.response.use((response: any) => {\r\n  return response\r\n}, async function (error: { config: any; response: { status: number; }; }) {\r\n  const originalRequest = error.config;\r\n  // if (error.response.status === 401 && !originalRequest._retry) {\r\n    // originalRequest._retry = true;\r\n    // const access_token = await refreshAccessToken();            \r\n    // axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\r\n    // return axiosApiInstance(originalRequest);\r\n  // }\r\n  return Promise.reject(error);\r\n});\r\n\r\n/**\r\n * Method to refetch token on token expiry\r\n */\r\nexport async function refreshAccessToken(){\r\n    return axios.post(`${process.env[\"REACT_APP_BACKEND_API\"]}V1/user/login`)\r\n    .then((response: { data: any; })=>{\r\n        let data = response.data;\r\n        return data;\r\n    }).catch((error: string | undefined)=>{\r\n        throw new Error(error);            \r\n    })\r\n}\r\n\r\n/**\r\n * Common Get method\r\n * @param {*} url : string\r\n */\r\nexport async function getApi (url: any) {\r\n        return axiosApiInstance.get(`${process.env[\"REACT_APP_BACKEND_API\"]}${url}`)\r\n        .then((response: { data: any; })=>{\r\n            let data = response.data;\r\n            return data;\r\n        }).catch((error: string | undefined)=>{\r\n            throw new Error(error);            \r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Common API to Create an Entity / common post API\r\n * @param {*} url : string\r\n * @param {*} argBody : Object\r\n */\r\nexport async function postApi (url: any,argBody: any) {\r\n    try{\r\n        debugger;\r\n        let response = await axiosApiInstance.post(`${process.env[\"REACT_APP_BACKEND_API\"]}${url}`,argBody);\r\n        let data =  response.data;\r\n        return data;\r\n    } catch(error){\r\n        throw new Error(error);\r\n    }\r\n}\r\n\r\n// Method to login user\r\nexport async function login(requestBody: any){\r\n  return axios.post(`${process.env[\"REACT_APP_BACKEND_API\"]}V1/user/login`,requestBody)\r\n    .then((response: { data: any; })=>{\r\n        let data = response;\r\n        console.log(data);\r\n        return data;\r\n    }).catch((error: string | undefined)=>{\r\n      console.log(error);\r\n        throw new Error(error);            \r\n    })\r\n}\r\n  ","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\header.tsx",["145"],"import React from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport PagesIcon from '@material-ui/icons/Pages';\r\nimport Logo from '../assets/images/logo.svg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header:{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding:'1% 2%'\r\n    },\r\n    headerleft:{\r\n        display: 'flex',\r\n        flexBasis: '25%',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n        background: '#FFFFFF',\r\n        boxShadow: '0px 2px 4px rgb(0 0 0 / 8%), 0px 4px 24px rgb(0 0 0 / 8%)',\r\n        borderRadius: '4px',\r\n        padding: '10px'\r\n    },\r\n    headerright:{\r\n        flexBasis: '15%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n        background: '#FFFFFF',\r\n        boxShadow: '0px 2px 4px rgb(0 0 0 / 8%), 0px 4px 24px rgb(0 0 0 / 8%)',\r\n        borderRadius: '4px',\r\n        padding: '10px'\r\n    }\r\n}));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.header}>\r\n                <div className={classes.headerleft}>\r\n                     <img src={Logo} alt=\"image\" />\r\n                     <PagesIcon/>\r\n                     <QueryBuilderIcon/>\r\n                     <EqualizerIcon/>\r\n                </div>\r\n                <div className={classes.headerright}>\r\n                    <WbSunnyIcon/>\r\n                    <ChatBubbleOutlineIcon/>\r\n                    <SettingsIcon/>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\teammates\\index.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\sidebar.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\constants.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\roles\\index.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\companies\\index.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\projects\\index.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\index.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\index.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\graphql.ts",["146"],"import {getExchangeToken, logout} from './authservice';\r\nimport Notification,{AlertTypes} from './notify';\r\nimport {\r\n  ApolloClient,\r\n  createHttpLink,\r\n  InMemoryCache\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: process.env[\"REACT_APP_GRAPHQL_API\"], //http link uri\r\n});\r\n\r\nconst authLink = setContext((operation, context) => {\r\n  const role = operation?.operationName;\r\n  const token = getExchangeToken();\r\n  if (token === null) {\r\n    return {};\r\n  } else {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'x-hasura-role': role //uncomment this \r\n      },\r\n    };\r\n  }\r\n});\r\n\r\n// const wsLink = new WebSocketLink({\r\n//   uri: `ws://localhost:4000/graphql`, //ws link uri\r\n//   options: {\r\n//     reconnect: true,\r\n//     connectionParams: {\r\n//       authToken: \"\", //pass the token hera\r\n//     },\r\n//   },\r\n// });\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors) {\r\n    graphQLErrors.map(({ message, locations, extensions }) => {\r\n      switch (extensions?.code) {\r\n        case \"access-denied\":\r\n        case \"not-found\":\r\n        case \"validation-failed\": {\r\n          Notification.sendNotification('Access denied',AlertTypes.warn);\r\n          break;\r\n        }\r\n        case \"invalid-jwt\": {\r\n          logout();\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n  if (networkError) {\r\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n    console.log(`[Network error]: ${networkError}`);\r\n  }\r\n});\r\n\r\n// using the ability to split links, you can send data to each link\r\n// depending on what kind of operation is being sent\r\n\r\n\r\n// const link = split(\r\n//   // split based on operation type\r\n//   ({ query }) => {\r\n//     const { kind, operation }: Definintion = getMainDefinition(query);\r\n//     return kind === \"OperationDefinition\" && operation === \"subscription\";\r\n//   },\r\n//   wsLink,\r\n//   httpLink\r\n// );\r\n\r\nexport const client = new ApolloClient({\r\n  link: errorLink.concat(authLink.concat(httpLink)),\r\n  cache: new InMemoryCache(),\r\n});\r\n","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\graphql-models\\projects.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\projectItem.tsx",["147"],"\r\ninterface IProps {\r\n    launch: {\r\n      mission_name: string;\r\n      launch_date_local: string;\r\n    };\r\n  }\r\n  \r\n  export default function ProjectItem({\r\n    project: { id, name },\r\n  }: any) {\r\n    return (\r\n      <div className=\"card card-body mb-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9 card-content\">\r\n            <h4>\r\n               <span>{name}</span>\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  ","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\role.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\authservice.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\models\\token.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\grqphql-queries\\project.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\permission.ts",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":2,"column":17,"nodeType":"154","messageId":"155","endLine":2,"endColumn":25},{"ruleId":"152","severity":1,"message":"156","line":2,"column":27,"nodeType":"154","messageId":"155","endLine":2,"endColumn":31},{"ruleId":"152","severity":1,"message":"157","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":16},{"ruleId":"152","severity":1,"message":"158","line":11,"column":8,"nodeType":"154","messageId":"155","endLine":11,"endColumn":14},{"ruleId":"152","severity":1,"message":"159","line":5,"column":10,"nodeType":"154","messageId":"155","endLine":5,"endColumn":14},{"ruleId":"160","severity":1,"message":"161","line":15,"column":40,"nodeType":"162","messageId":"163","endLine":15,"endColumn":42},{"ruleId":"152","severity":1,"message":"164","line":26,"column":9,"nodeType":"154","messageId":"155","endLine":26,"endColumn":24},{"ruleId":"165","severity":1,"message":"166","line":45,"column":22,"nodeType":"167","endLine":45,"endColumn":52},{"ruleId":"160","severity":1,"message":"168","line":42,"column":60,"nodeType":"162","messageId":"169","endLine":42,"endColumn":62},{"ruleId":"152","severity":1,"message":"170","line":2,"column":11,"nodeType":"154","messageId":"155","endLine":2,"endColumn":17},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"@typescript-eslint/no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","'lazy' is defined but never used.","'Fallback' is defined but never used.","'signup' is defined but never used.","'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'originalRequest' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","Array.prototype.map() expects a return value from arrow function.","expectedInside","'IProps' is defined but never used.","no-global-assign","no-unsafe-negation"]