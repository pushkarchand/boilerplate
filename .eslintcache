[{"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\index.tsx":"1","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\reportWebVitals.ts":"2","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\App.tsx":"3","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\reducer.ts":"4","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\notify.tsx":"5","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\authContext.tsx":"6","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\theme.tsx":"7","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\fallback.tsx":"8","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\register.tsx":"9","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\login.tsx":"10","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\action.ts":"11","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\landing.tsx":"12","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\reactive.tsx":"13","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\template.tsx":"14","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\api.tsx":"15","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\header.tsx":"16","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\teammates\\index.tsx":"17","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\sidebar.tsx":"18","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\constants.ts":"19","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\roles\\index.tsx":"20","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\companies\\index.tsx":"21","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\projects\\index.tsx":"22","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\index.tsx":"23","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\index.tsx":"24","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\graphql.ts":"25","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\projectItem.tsx":"26","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\role.ts":"27","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\authservice.ts":"28","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\models\\token.ts":"29","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\permission.ts":"30","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\graphql\\queries\\project.ts":"31","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\graphql\\models\\projects.ts":"32","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\graphql\\queries\\company.ts":"33","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\graphql\\models\\company.ts":"34","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\custom-hooks\\useDebounce.ts":"35"},{"size":746,"mtime":1613381329467,"results":"36","hashOfConfig":"37"},{"size":425,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":1838,"mtime":1613452900943,"results":"39","hashOfConfig":"37"},{"size":769,"mtime":1613452848249,"results":"40","hashOfConfig":"37"},{"size":1375,"mtime":1611685138341,"results":"41","hashOfConfig":"37"},{"size":85,"mtime":1611684935011,"results":"42","hashOfConfig":"37"},{"size":114,"mtime":1611660505338,"results":"43","hashOfConfig":"37"},{"size":124,"mtime":1611683953843,"results":"44","hashOfConfig":"37"},{"size":5985,"mtime":1611684617220,"results":"45","hashOfConfig":"37"},{"size":6870,"mtime":1614164942687,"results":"46","hashOfConfig":"37"},{"size":488,"mtime":1611686507266,"results":"47","hashOfConfig":"37"},{"size":2693,"mtime":1613482838026,"results":"48","hashOfConfig":"37"},{"size":2227,"mtime":1612867932504,"results":"49","hashOfConfig":"37"},{"size":858,"mtime":1612420695191,"results":"50","hashOfConfig":"37"},{"size":2854,"mtime":1614067144421,"results":"51","hashOfConfig":"37"},{"size":1960,"mtime":1612260137868,"results":"52","hashOfConfig":"37"},{"size":185,"mtime":1612328058201,"results":"53","hashOfConfig":"37"},{"size":1998,"mtime":1613537713970,"results":"54","hashOfConfig":"37"},{"size":2037,"mtime":1613537781473,"results":"55","hashOfConfig":"37"},{"size":143,"mtime":1612327773431,"results":"56","hashOfConfig":"37"},{"size":1974,"mtime":1614271399568,"results":"57","hashOfConfig":"37"},{"size":1917,"mtime":1614146056261,"results":"58","hashOfConfig":"37"},{"size":759,"mtime":1613482811333,"results":"59","hashOfConfig":"37"},{"size":2505,"mtime":1613537685115,"results":"60","hashOfConfig":"37"},{"size":2191,"mtime":1614164920553,"results":"61","hashOfConfig":"37"},{"size":468,"mtime":1613558696717,"results":"62","hashOfConfig":"37"},{"size":2132,"mtime":1613190806116,"results":"63","hashOfConfig":"37"},{"size":1145,"mtime":1614165194218,"results":"64","hashOfConfig":"37"},{"size":2061,"mtime":1613409586327,"results":"65","hashOfConfig":"37"},{"size":262,"mtime":1614164953752,"results":"66","hashOfConfig":"37"},{"size":965,"mtime":1614146113797,"results":"67","hashOfConfig":"37"},{"size":463,"mtime":1613415214315,"results":"68","hashOfConfig":"37"},{"size":1228,"mtime":1614271069694,"results":"69","hashOfConfig":"37"},{"size":665,"mtime":1613453855664,"results":"70","hashOfConfig":"37"},{"size":347,"mtime":1613455809739,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1uxv74n",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\index.tsx",[],["153","154"],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\reportWebVitals.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\App.tsx",["155","156","157","158"],"import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport React, { Suspense, lazy, useReducer, useEffect } from \"react\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./App.css\";\r\nimport Fallback from \"./modules/root/fallback\";\r\nimport Notify from './services/notify';\r\nimport {  ThemeProvider } from '@material-ui/core/styles';\r\nimport {theme} from './utils/theme';\r\nimport Login from './modules/root/login';\r\nimport signup from './modules/root/register';\r\nimport { stateContext } from './context/authentication/authContext';\r\nimport { initialState, stateReducer } from './context/authentication/reducer';\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport Onx from \"./modules/root/index\";\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(stateReducer, initialState);\r\n  \r\n  useEffect(() => {\r\n    Notify.notifications.subscribe((alert: any) => alert instanceof Function && alert());\r\n  }, [])\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <stateContext.Provider value={{state:state,dispatch:dispatch}}>\r\n      <Router>\r\n      {state.isAuthenticated?(\r\n        <div className=\"container\">\r\n           <div className=\"container\">\r\n              <Onx/>\r\n           </div>\r\n        </div>\r\n        ):(\r\n          <Switch>\r\n              <Route path=\"/login\" component={Login} />\r\n              {/* <Route path=\"/signup\" component={signup} /> */}\r\n              <Route path=\"*\" component={Login} />\r\n          </Switch>\r\n        )}\r\n      </Router>\r\n      <ToastContainer autoClose={5000} />\r\n      {state.isLoading?(\r\n         <div className=\"backdrop\">\r\n            <CircularProgress color=\"inherit\" />\r\n        </div>\r\n      ):(\"\")}\r\n      </stateContext.Provider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\reducer.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\notify.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\authContext.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\theme.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\fallback.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\register.tsx",[],["159","160"],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\login.tsx",["161","162","163"],"import React,{useState,useContext} from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {login, postApi} from '../../services/api';\r\nimport {stateContext} from '../../context/authentication/authContext';\r\nimport {setIsAuthenticated, setIsLoading} from '../../context/authentication/action';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {features} from '../../utils/constants';\r\nimport {decodeToken, setExchangeToken, setToken, logout} from '../../services/authservice';\r\nimport Notification,{ AlertTypes } from \"../../services/notify\";\r\n// Styles for the login component\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  main:{\r\n      height: \"100%\",\r\n      alignItems: \"center\",\r\n      display: \"flex\",\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.dark\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  fields: {\r\n    backgroundColor: '#FFFFFF'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    position: \"absolute\"\r\n  },\r\n  signupmessage: {\r\n    margin: theme.spacing(5,0,0)\r\n  },\r\n  signup: {\r\n    margin: theme.spacing(0,0,0,1),\r\n    padding: 7,\r\n    borderLeft: \"1px solid #FFFFFF\"\r\n  }\r\n}));\r\n\r\nexport default function SignIn() {\r\n  // variable declartion like email, password and invalid password\r\n  const classes = useStyles();\r\n  const [emailId, setEmailId] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [inValidEmail, setInValidEmail] = useState('');\r\n  const context:any = useContext(stateContext);\r\n  let history = useHistory();\r\n\r\n  /**\r\n   * Method to login user with the given password and emailId\r\n   * @param {*} e \r\n   */\r\n  const handleSubmit=async (e: any)=>{\r\n    e.preventDefault();\r\n    try{\r\n        context.dispatch(setIsLoading(true));\r\n        const user={\r\n          email: emailId,\r\n          password: password\r\n        };\r\n        const response= await login(user);\r\n        setToken(response.data.success);\r\n        fetchExchangeToken();\r\n    } catch(error){\r\n      console.log(error);\r\n      context.dispatch(setIsLoading(false));\r\n    }\r\n  }\r\n\r\n  const fetchExchangeToken= async ()=>{\r\n    try{\r\n      const exchangeToken: ExchangeToken= {\r\n        tenantId: Number(decodeToken().tenantId),\r\n        features:[features.PROJECT, features.USER,features.ROLE, features.COMPANY]\r\n      };\r\n      const response= await postApi('V1/user/login/exchange',exchangeToken);\r\n      setExchangeToken(response.success);\r\n      context.dispatch(setIsAuthenticated(true));\r\n      context.dispatch(setIsLoading(false));\r\n      history.push('/');\r\n      // Notification.sendNotification('Loged in successfully',AlertTypes.success);\r\n    } catch(error){\r\n      logout();\r\n      context.dispatch(setIsLoading(false));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to set change in password\r\n   * @param {*} event \r\n   */\r\n  const changeInPassword=(event: any)=>{\r\n      setPassword(event.target.value)\r\n  }\r\n\r\n  /**\r\n   * Methof to set change in email\r\n   * @param {*} event \r\n   */\r\n  const changeInEmailId=(event: any)=>{\r\n    setEmailId(event.target.value)\r\n  }\r\n\r\n  /**\r\n   * Method to validate email\r\n   * @param {*} event \r\n   */\r\n  const onEmailChange=(event: any)=> {\r\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(event.target.value)){\r\n      setInValidEmail(\"\");\r\n    } else {\r\n      setInValidEmail('Invalid Email format');\r\n    }\r\n  }\r\n\r\n  return (\r\n      <React.Fragment>\r\n          <Container component=\"main\" maxWidth=\"xs\" className={classes.main}>\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n              </Typography>\r\n              {/* Login form */}\r\n              <form className={classes.form} onSubmit={handleSubmit}>\r\n                {/* Email input field */}\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      className={classes.fields}\r\n                      required\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      placeholder=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      value={emailId}\r\n                      helperText={inValidEmail}\r\n                      onChange={changeInEmailId}\r\n                      onBlur={onEmailChange}\r\n                    />\r\n                  </Grid>\r\n                  {/* Password input field */}\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      className={classes.fields}\r\n                      required\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      value={password}\r\n                      onChange={changeInPassword}\r\n                    />\r\n                  </Grid>\r\n                  {/* Button to submit and login */}\r\n                  <Grid item xs={12}>\r\n                      <Button\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className={classes.submit}\r\n                          >\r\n                      Sign In\r\n                      </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                {/* Link to route to signup screen */}\r\n                {/* <Grid container className={classes.signupmessage} justify=\"flex-end\">\r\n                  <Grid item>\r\n                    <Link className={classes.signup} to=\"/signup\">Create New Account</Link>\r\n                  </Grid>\r\n                </Grid> */}\r\n              </form>\r\n            </div>\r\n          </Container>\r\n      </React.Fragment>\r\n  );\r\n}\r\n\r\nexport interface ExchangeToken{\r\n  tenantId: number;\r\n  features: Array<string>;\r\n}","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\action.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\landing.tsx",["164","165","166","167","168","169"],"import React, { useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useForm, Controller } from \"react-hook-form\"; \r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {formTemplates} from '../../utils/constants';\r\n// import ReactSelect from \"react-select\";\r\nimport {\r\n  TextField\r\n} from \"@material-ui/core\";\r\n\r\n\r\nconst defaultValues = {\r\n  Native: \"\",\r\n  TextField: \"\",\r\n  Select: \"\",\r\n  Checkbox: false,\r\n  switch: false,\r\n  RadioGroup: \"\"\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    \"@global\": {\r\n      body: {\r\n        backgroundColor: theme.palette.common.white\r\n      }\r\n    },\r\n    mainContainer:{\r\n        padding:\"25px\"\r\n    }\r\n}));\r\n\r\nexport default function Landing() {\r\n  const classes = useStyles();\r\n  const { handleSubmit, register, reset, control } = useForm({ });\r\n\r\n  const onSubmit = (data: any) =>{\r\n    //  alert(JSON.stringify(data));\r\n     alert(data);\r\n };\r\n  const renderFields=()=>{\r\n    return formTemplates.map((item:any)=>{\r\n      let {name, type, label, validationProps, placeholder} = item;\r\n      switch(type){\r\n        case 'text':\r\n          return(\r\n            <Grid item xs={12}>\r\n                    <Controller as={<TextField fullWidth label={label}/>} name={name} control={control} />\r\n             </Grid>\r\n          )\r\n        case 'number':\r\n          return(\r\n            <Grid item xs={12}>\r\n                    <Controller as={<TextField fullWidth label={label}/>} name={name} control={control} />\r\n             </Grid>\r\n          )\r\n        case 'email':\r\n        return(\r\n            <Grid item xs={12}>\r\n                <Controller as={<TextField fullWidth label={label}/>} name={name} control={control} />\r\n            </Grid>\r\n          )\r\n      }\r\n     \r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <Container className={classes.mainContainer} maxWidth=\"xs\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid container spacing={2}>\r\n            {renderFields()}\r\n           \r\n            <Grid item xs={6}>\r\n            <Button fullWidth variant=\"outlined\" color=\"primary\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    reset(defaultValues);\r\n                }}\r\n                >\r\n                Reset Form\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Button fullWidth variant=\"outlined\" type=\"submit\" color=\"primary\">submit</Button>\r\n            </Grid>\r\n        </Grid>\r\n            </form>\r\n        \r\n    </Container>\r\n    );\r\n}\r\n","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\reactive.tsx",["170"],"import * as React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport './reactive.css';\r\nimport {formTemplates} from '../../utils/constants';\r\n\r\nexport default function ReactiveForm() {\r\n  const { register, handleSubmit,errors } = useForm();\r\n  const onSubmit = (data: any) =>{\r\n    //  alert(JSON.stringify(data));\r\n    debugger;\r\n     console.log(errors);\r\n    };\r\n\r\n  const renderFields=()=>{\r\n    return formTemplates.map((item:any)=>{\r\n      let {name, type, label, validationProps, placeholder} = item;\r\n      switch(type){\r\n        case 'text':\r\n          return(\r\n            <div key={name} className=\"formItem\">\r\n                <label>{label}</label>\r\n                <input type=\"text\" name={name} id={name} ref={register({\r\n                  required: validationProps.required,\r\n                  pattern: validationProps?.pattern\r\n                })} placeholder={placeholder} />\r\n                {errors[name] && <span className=\"errorMessage\">{errors[name]['message']}</span>}\r\n            </div>\r\n          )\r\n        case 'number':\r\n          return(\r\n            <div key={name} className=\"formItem\">\r\n                <label>{label}</label>\r\n                <input type=\"number\" name={name} id={name} ref={register({\r\n                  required: validationProps.required\r\n                })} placeholder={placeholder} />\r\n                {errors[name] && <span className=\"errorMessage\">{JSON.stringify(errors[name].type)}</span>}\r\n            </div>\r\n          )\r\n        case 'email':\r\n        return(\r\n            <div key={name} className=\"formItem\">\r\n                <label>{label}</label>\r\n                <input type=\"email\" name={name} id={name} ref={register({\r\n                  required: validationProps.required,pattern: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/\r\n                })} placeholder={placeholder} />\r\n                {errors[name] && <span className=\"errorMessage\">{errors[name]['message']}</span>}\r\n            </div>\r\n          )\r\n      }\r\n     \r\n    })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n          {renderFields()}\r\n          <button type=\"button\" onClick={(e)=>onSubmit(e)}>click</button>\r\n          <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\template.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\api.tsx",["171"],"import {getToken} from './authservice';\r\nconst axios = require('axios');\r\nconst axiosApiInstance = axios.create();\r\n\r\n// Request interceptor for API calls\r\naxiosApiInstance.interceptors.request.use(\r\n  async (config: { headers: { Authorization: string; 'Content-Type': string;}; }) => {\r\n    const tokenStr=getToken();\r\n    config.headers = { \r\n      'Authorization': `Bearer ${tokenStr}`,\r\n      'Content-Type': 'application/json'\r\n    }\r\n    return config;\r\n  },\r\n    (  error: any) => {\r\n    Promise.reject(error)\r\n});\r\n\r\n// Response interceptor for API calls\r\n// Checks for the error response and if the satus is 401\r\n// then Fetch the token and retry the original request again\r\naxiosApiInstance.interceptors.response.use((response: any) => {\r\n  return response\r\n}, async function (error: { config: any; response: { status: number; }; }) {\r\n  const originalRequest = error.config;\r\n  // if (error.response.status === 401 && !originalRequest._retry) {\r\n    // originalRequest._retry = true;\r\n    // const access_token = await refreshAccessToken();            \r\n    // axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\r\n    // return axiosApiInstance(originalRequest);\r\n  // }\r\n  return Promise.reject(error);\r\n});\r\n\r\n/**\r\n * Method to refetch token on token expiry\r\n */\r\nexport async function refreshAccessToken(){\r\n    return axios.post(`${process.env[\"REACT_APP_BACKEND_API\"]}V1/user/login`)\r\n    .then((response: { data: any; })=>{\r\n        let data = response.data;\r\n        return data;\r\n    }).catch((error: string | undefined)=>{\r\n        throw new Error(error);            \r\n    })\r\n}\r\n\r\n/**\r\n * Common Get method\r\n * @param {*} url : string\r\n */\r\nexport async function getApi (url: any) {\r\n        return axiosApiInstance.get(`${process.env[\"REACT_APP_BACKEND_API\"]}${url}`)\r\n        .then((response: { data: any; })=>{\r\n            let data = response.data;\r\n            return data;\r\n        }).catch((error: string | undefined)=>{\r\n            throw new Error(error);            \r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Common API to Create an Entity / common post API\r\n * @param {*} url : string\r\n * @param {*} argBody : Object\r\n */\r\nexport async function postApi (url: any,argBody: any) {\r\n    try{\r\n        let response = await axiosApiInstance.post(`${process.env[\"REACT_APP_BACKEND_API\"]}${url}`,argBody);\r\n        let data =  response.data;\r\n        return data;\r\n    } catch(error){\r\n        throw new Error(error);\r\n    }\r\n}\r\n\r\n// Method to login user\r\nexport async function login(requestBody: any){\r\n  return axios.post(`${process.env[\"REACT_APP_BACKEND_API\"]}V1/user/login`,requestBody)\r\n    .then((response: { data: any; })=>{\r\n        let data = response;\r\n        return data;\r\n    }).catch((error: string | undefined)=>{\r\n      console.log(error);\r\n        throw new Error(error);            \r\n    })\r\n}\r\n  ","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\header.tsx",["172"],"import React from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport PagesIcon from '@material-ui/icons/Pages';\r\nimport Logo from '../assets/images/logo.svg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header:{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding:'1% 2%'\r\n    },\r\n    headerleft:{\r\n        display: 'flex',\r\n        flexBasis: '25%',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n        background: '#FFFFFF',\r\n        boxShadow: '0px 2px 4px rgb(0 0 0 / 8%), 0px 4px 24px rgb(0 0 0 / 8%)',\r\n        borderRadius: '4px',\r\n        padding: '10px'\r\n    },\r\n    headerright:{\r\n        flexBasis: '15%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n        background: '#FFFFFF',\r\n        boxShadow: '0px 2px 4px rgb(0 0 0 / 8%), 0px 4px 24px rgb(0 0 0 / 8%)',\r\n        borderRadius: '4px',\r\n        padding: '10px'\r\n    }\r\n}));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.header}>\r\n                <div className={classes.headerleft}>\r\n                     <img src={Logo} alt=\"image\" />\r\n                     <PagesIcon/>\r\n                     <QueryBuilderIcon/>\r\n                     <EqualizerIcon/>\r\n                </div>\r\n                <div className={classes.headerright}>\r\n                    <WbSunnyIcon/>\r\n                    <ChatBubbleOutlineIcon/>\r\n                    <SettingsIcon/>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\teammates\\index.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\sidebar.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\constants.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\roles\\index.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\companies\\index.tsx",["173","174","175"],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\projects\\index.tsx",["176","177"],"import React, { Fragment, useContext,useEffect, useState } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { enumerateProjects } from \"../../graphql/queries/project\";\r\nimport  ProjectItem  from \"../../components/projectItem\";\r\nimport {useDebounce} from '../../custom-hooks/useDebounce';\r\nimport {stateContext} from '../../context/authentication/authContext';\r\nimport {setIsLoading} from '../../context/authentication/action';\r\nimport Notification,{ AlertTypes } from \"../../services/notify\";\r\nimport './index.scss';\r\n\r\nlet query=enumerateProjects('');\r\n\r\nexport default function ProjectsLanding() {\r\n  const [name, setname] = useState('');\r\n  const debounceName = useDebounce(name,1000);\r\n  const context:any = useContext(stateContext);\r\n  const [getProjects, { loading,data, error }] = useLazyQuery(query,\r\n  {\r\n    fetchPolicy: 'network-only'\r\n});\r\n\r\n  useEffect(() => {\r\n    query=enumerateProjects(debounceName);\r\n    getProjects();\r\n }, [debounceName]);\r\n\r\n useEffect(() => {\r\n  if (loading){\r\n     context.dispatch(setIsLoading(true));\r\n  }\r\n  if (data){\r\n      context.dispatch(setIsLoading(false));\r\n  }\r\n  if (error){\r\n      Notification.sendNotification(error,AlertTypes.warn);\r\n  }\r\n  return () => {\r\n    return;\r\n  }\r\n}, [loading, data,error]);\r\n\r\n\r\nconst changeInName=(argEvent: any)=>{\r\n    setname(argEvent.target.value);\r\n}\r\n\r\n  return (\r\n    <Fragment>\r\n       <TextField\r\n              fullWidth\r\n              id=\"email\"\r\n              placeholder=\"name\"\r\n              name=\"name\"\r\n              autoComplete=\"email\"\r\n              value={name}\r\n              onChange={changeInName}\r\n                    />\r\n      <div className=\"projectLanding__body\">\r\n      {data && data.project.map((project: any) => (\r\n        <ProjectItem key={project.id} project={project}/>\r\n      ))}\r\n      </div>\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n ","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\index.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\index.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\graphql.ts",["178"],"import {getExchangeToken, logout} from './authservice';\r\nimport Notification,{AlertTypes} from './notify';\r\nimport {\r\n  ApolloClient,\r\n  createHttpLink,\r\n  InMemoryCache\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: process.env[\"REACT_APP_GRAPHQL_API\"], //http link uri\r\n});\r\n\r\nconst authLink = setContext((operation, context) => {\r\n  const role = operation?.operationName;\r\n  const token = getExchangeToken();\r\n  if (token === null) {\r\n    return {};\r\n  } else {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'x-hasura-role': role\r\n      },\r\n    };\r\n  }\r\n});\r\n\r\n// const wsLink = new WebSocketLink({\r\n//   uri: `ws://localhost:4000/graphql`, //ws link uri\r\n//   options: {\r\n//     reconnect: true,\r\n//     connectionParams: {\r\n//       authToken: \"\", //pass the token hera\r\n//     },\r\n//   },\r\n// });\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors) {\r\n    graphQLErrors.map(({ message, locations, extensions }) => {\r\n      switch (extensions?.code) {\r\n        case \"access-denied\":\r\n        case \"not-found\":\r\n        case \"validation-failed\": {\r\n          Notification.sendNotification('Access denied',AlertTypes.warn);\r\n          break;\r\n        }\r\n        case \"invalid-jwt\": {\r\n          logout();\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n  if (networkError) {\r\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n    console.log(`[Network error]: ${networkError}`);\r\n  }\r\n});\r\n\r\n// using the ability to split links, you can send data to each link\r\n// depending on what kind of operation is being sent\r\n\r\n\r\n// const link = split(\r\n//   // split based on operation type\r\n//   ({ query }) => {\r\n//     const { kind, operation }: Definintion = getMainDefinition(query);\r\n//     return kind === \"OperationDefinition\" && operation === \"subscription\";\r\n//   },\r\n//   wsLink,\r\n//   httpLink\r\n// );\r\n\r\nexport const client = new ApolloClient({\r\n  link: errorLink.concat(authLink.concat(httpLink)),\r\n  cache: new InMemoryCache(),\r\n});\r\n","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\projectItem.tsx",["179"],"import './projectItem.scss';\r\ninterface IProps {\r\n    launch: {\r\n      mission_name: string;\r\n      launch_date_local: string;\r\n    };\r\n  }\r\n  \r\n  export default function ProjectItem({\r\n    project: { id, name },\r\n  }: any) {\r\n    return (\r\n      <div className=\"projectItem\">\r\n        <div className=\"projectItem__aviator\">\r\n           \r\n        </div>\r\n        <div className=\"projectItem__title\">\r\n           {name}\r\n           </div>\r\n      </div>\r\n    );\r\n  }\r\n  ","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\role.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\authservice.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\models\\token.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\permission.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\graphql\\queries\\project.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\graphql\\models\\projects.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\graphql\\queries\\company.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\graphql\\models\\company.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\custom-hooks\\useDebounce.ts",[],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":2,"column":17,"nodeType":"186","messageId":"187","endLine":2,"endColumn":25},{"ruleId":"184","severity":1,"message":"188","line":2,"column":27,"nodeType":"186","messageId":"187","endLine":2,"endColumn":31},{"ruleId":"184","severity":1,"message":"189","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":16},{"ruleId":"184","severity":1,"message":"190","line":11,"column":8,"nodeType":"186","messageId":"187","endLine":11,"endColumn":14},{"ruleId":"180","replacedBy":"191"},{"ruleId":"182","replacedBy":"192"},{"ruleId":"184","severity":1,"message":"193","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":14},{"ruleId":"184","severity":1,"message":"194","line":18,"column":8,"nodeType":"186","messageId":"187","endLine":18,"endColumn":20},{"ruleId":"184","severity":1,"message":"195","line":18,"column":23,"nodeType":"186","messageId":"187","endLine":18,"endColumn":33},{"ruleId":"184","severity":1,"message":"196","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"197","line":7,"column":8,"nodeType":"186","messageId":"187","endLine":7,"endColumn":18},{"ruleId":"184","severity":1,"message":"198","line":37,"column":25,"nodeType":"186","messageId":"187","endLine":37,"endColumn":33},{"ruleId":"199","severity":1,"message":"200","line":44,"column":40,"nodeType":"201","messageId":"202","endLine":44,"endColumn":42},{"ruleId":"184","severity":1,"message":"203","line":45,"column":31,"nodeType":"186","messageId":"187","endLine":45,"endColumn":46},{"ruleId":"184","severity":1,"message":"204","line":45,"column":48,"nodeType":"186","messageId":"187","endLine":45,"endColumn":59},{"ruleId":"199","severity":1,"message":"200","line":15,"column":40,"nodeType":"201","messageId":"202","endLine":15,"endColumn":42},{"ruleId":"184","severity":1,"message":"205","line":25,"column":9,"nodeType":"186","messageId":"187","endLine":25,"endColumn":24},{"ruleId":"206","severity":1,"message":"207","line":45,"column":22,"nodeType":"208","endLine":45,"endColumn":52},{"ruleId":"184","severity":1,"message":"209","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":18},{"ruleId":"210","severity":1,"message":"211","line":19,"column":9,"nodeType":"212","endLine":19,"endColumn":23,"suggestions":"213"},{"ruleId":"210","severity":1,"message":"214","line":38,"column":10,"nodeType":"212","endLine":38,"endColumn":31,"suggestions":"215"},{"ruleId":"210","severity":1,"message":"216","line":26,"column":5,"nodeType":"212","endLine":26,"endColumn":19,"suggestions":"217"},{"ruleId":"210","severity":1,"message":"214","line":41,"column":4,"nodeType":"212","endLine":41,"endColumn":25,"suggestions":"218"},{"ruleId":"199","severity":1,"message":"219","line":42,"column":60,"nodeType":"201","messageId":"220","endLine":42,"endColumn":62},{"ruleId":"184","severity":1,"message":"221","line":2,"column":11,"nodeType":"186","messageId":"187","endLine":2,"endColumn":17},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"@typescript-eslint/no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","'lazy' is defined but never used.","'Fallback' is defined but never used.","'signup' is defined but never used.",["222"],["223"],"'Link' is defined but never used.","'Notification' is defined but never used.","'AlertTypes' is defined but never used.","'useState' is defined but never used.","'InputLabel' is defined but never used.","'register' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'validationProps' is assigned a value but never used.","'placeholder' is assigned a value but never used.","'originalRequest' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useQuery' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCompanies'. Either include it or remove the dependency array.","ArrayExpression",["224"],"React Hook useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.",["225"],"React Hook useEffect has a missing dependency: 'getProjects'. Either include it or remove the dependency array.",["226"],["227"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","'IProps' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"230","fix":"234"},"Update the dependencies array to be: [debounceName, getCompanies]",{"range":"235","text":"236"},"Update the dependencies array to be: [loading, data, error, context]",{"range":"237","text":"238"},"Update the dependencies array to be: [debounceName, getProjects]",{"range":"239","text":"240"},{"range":"241","text":"238"},[844,858],"[debounceName, getCompanies]",[1347,1368],"[loading, data, error, context]",[1018,1032],"[debounceName, getProjects]",[1309,1330]]