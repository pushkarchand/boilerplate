[{"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\index.tsx":"1","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\reportWebVitals.ts":"2","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\App.tsx":"3","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\reducer.ts":"4","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\notify.tsx":"5","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\authContext.tsx":"6","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\theme.tsx":"7","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\fallback.tsx":"8","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\register.tsx":"9","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\login.tsx":"10","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\action.ts":"11","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\landing.tsx":"12","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\reactive.tsx":"13","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\template.tsx":"14","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\api.tsx":"15","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\header.tsx":"16","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\teammates\\index.tsx":"17","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\sidebar.tsx":"18","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\constants.ts":"19","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\roles\\index.tsx":"20","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\companies\\index.tsx":"21","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\projects\\index.tsx":"22","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\index.tsx":"23","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\index.tsx":"24","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\graphql.ts":"25","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\graphql-models\\projects.ts":"26","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\projectItem.tsx":"27","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\role.ts":"28"},{"size":746,"mtime":1613381329467,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":2083,"mtime":1613189811844,"results":"32","hashOfConfig":"30"},{"size":826,"mtime":1611686820591,"results":"33","hashOfConfig":"30"},{"size":1375,"mtime":1611685138341,"results":"34","hashOfConfig":"30"},{"size":85,"mtime":1611684935011,"results":"35","hashOfConfig":"30"},{"size":114,"mtime":1611660505338,"results":"36","hashOfConfig":"30"},{"size":124,"mtime":1611683953843,"results":"37","hashOfConfig":"30"},{"size":5985,"mtime":1611684617220,"results":"38","hashOfConfig":"30"},{"size":5964,"mtime":1611739320429,"results":"39","hashOfConfig":"30"},{"size":488,"mtime":1611686507266,"results":"40","hashOfConfig":"30"},{"size":682,"mtime":1611688020569,"results":"41","hashOfConfig":"30"},{"size":2227,"mtime":1612867932504,"results":"42","hashOfConfig":"30"},{"size":858,"mtime":1612420695191,"results":"43","hashOfConfig":"30"},{"size":4348,"mtime":1611660473711,"results":"44","hashOfConfig":"30"},{"size":1960,"mtime":1612260137868,"results":"45","hashOfConfig":"30"},{"size":185,"mtime":1612328058201,"results":"46","hashOfConfig":"30"},{"size":1998,"mtime":1612420862708,"results":"47","hashOfConfig":"30"},{"size":1755,"mtime":1612867664946,"results":"48","hashOfConfig":"30"},{"size":143,"mtime":1612327773431,"results":"49","hashOfConfig":"30"},{"size":151,"mtime":1612327780251,"results":"50","hashOfConfig":"30"},{"size":592,"mtime":1613192071684,"results":"51","hashOfConfig":"30"},{"size":407,"mtime":1612327826322,"results":"52","hashOfConfig":"30"},{"size":2426,"mtime":1612418304867,"results":"53","hashOfConfig":"30"},{"size":2084,"mtime":1613189749660,"results":"54","hashOfConfig":"30"},{"size":319,"mtime":1613190349322,"results":"55","hashOfConfig":"30"},{"size":563,"mtime":1613190029581,"results":"56","hashOfConfig":"30"},{"size":2132,"mtime":1613190806116,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1uxv74n",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\index.tsx",[],["121","122"],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\reportWebVitals.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\App.tsx",["123","124","125","126","127","128","129"],"import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport React, { Suspense, lazy, useReducer, useEffect } from \"react\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./App.css\";\r\nimport Fallback from \"./modules/root/fallback\";\r\nimport Notify from './services/notify';\r\nimport {  ThemeProvider } from '@material-ui/core/styles';\r\nimport {theme} from './utils/theme';\r\nimport Login from './modules/root/login';\r\nimport signup from './modules/root/register';\r\nimport { stateContext } from './context/authentication/authContext';\r\nimport { initialState, stateReducer } from './context/authentication/reducer';\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport Onx from \"./modules/root/index\";\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(stateReducer, initialState);\r\n  \r\n  useEffect(() => {\r\n    Notify.notifications.subscribe((alert: any) => alert instanceof Function && alert());\r\n  }, [])\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <stateContext.Provider value={{state:state,dispatch:dispatch}}>\r\n      <Router>\r\n      {/* {state.isAuthenticated?(\r\n        <div className=\"container\">\r\n          <Header/>\r\n          <Suspense fallback={<Fallback />}>\r\n            <Switch>\r\n                  <Route exact path=\"/\" component={Forms} />\r\n                  <Route path=\"/ONX\" component={ONX} />\r\n            </Switch>\r\n          </Suspense>\r\n        </div>\r\n        ):(\r\n          <Switch>\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/signup\" component={signup} />\r\n              <Route path=\"*\" component={Login} />\r\n          </Switch>\r\n        )} */}\r\n         <div className=\"container\">\r\n          <Onx/>\r\n        </div>\r\n      </Router>\r\n      <ToastContainer autoClose={5000} />\r\n      {state.isLoading?(\r\n         <div className=\"backdrop\">\r\n            <CircularProgress color=\"inherit\" />\r\n        </div>\r\n      ):(\"\")}\r\n      </stateContext.Provider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\reducer.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\notify.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\authContext.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\theme.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\fallback.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\register.tsx",[],["130","131"],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\login.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\context\\authentication\\action.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\landing.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\reactive.tsx",["132"],"import * as React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport './reactive.css';\r\nimport {formTemplates} from '../../utils/constants';\r\n\r\nexport default function ReactiveForm() {\r\n  const { register, handleSubmit,errors } = useForm();\r\n  const onSubmit = (data: any) =>{\r\n    //  alert(JSON.stringify(data));\r\n    debugger;\r\n     console.log(errors);\r\n    };\r\n\r\n  const renderFields=()=>{\r\n    return formTemplates.map((item:any)=>{\r\n      let {name, type, label, validationProps, placeholder} = item;\r\n      switch(type){\r\n        case 'text':\r\n          return(\r\n            <div key={name} className=\"formItem\">\r\n                <label>{label}</label>\r\n                <input type=\"text\" name={name} id={name} ref={register({\r\n                  required: validationProps.required,\r\n                  pattern: validationProps?.pattern\r\n                })} placeholder={placeholder} />\r\n                {errors[name] && <span className=\"errorMessage\">{errors[name]['message']}</span>}\r\n            </div>\r\n          )\r\n        case 'number':\r\n          return(\r\n            <div key={name} className=\"formItem\">\r\n                <label>{label}</label>\r\n                <input type=\"number\" name={name} id={name} ref={register({\r\n                  required: validationProps.required\r\n                })} placeholder={placeholder} />\r\n                {errors[name] && <span className=\"errorMessage\">{JSON.stringify(errors[name].type)}</span>}\r\n            </div>\r\n          )\r\n        case 'email':\r\n        return(\r\n            <div key={name} className=\"formItem\">\r\n                <label>{label}</label>\r\n                <input type=\"email\" name={name} id={name} ref={register({\r\n                  required: validationProps.required,pattern: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/\r\n                })} placeholder={placeholder} />\r\n                {errors[name] && <span className=\"errorMessage\">{errors[name]['message']}</span>}\r\n            </div>\r\n          )\r\n      }\r\n     \r\n    })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n          {renderFields()}\r\n          <button type=\"button\" onClick={(e)=>onSubmit(e)}>click</button>\r\n          <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\template.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\api.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\header.tsx",["133"],"import React from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport PagesIcon from '@material-ui/icons/Pages';\r\nimport Logo from '../assets/images/logo.svg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header:{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding:'1% 2%'\r\n    },\r\n    headerleft:{\r\n        display: 'flex',\r\n        flexBasis: '25%',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n        background: '#FFFFFF',\r\n        boxShadow: '0px 2px 4px rgb(0 0 0 / 8%), 0px 4px 24px rgb(0 0 0 / 8%)',\r\n        borderRadius: '4px',\r\n        padding: '10px'\r\n    },\r\n    headerright:{\r\n        flexBasis: '15%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n        background: '#FFFFFF',\r\n        boxShadow: '0px 2px 4px rgb(0 0 0 / 8%), 0px 4px 24px rgb(0 0 0 / 8%)',\r\n        borderRadius: '4px',\r\n        padding: '10px'\r\n    }\r\n}));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.header}>\r\n                <div className={classes.headerleft}>\r\n                     <img src={Logo} alt=\"image\" />\r\n                     <PagesIcon/>\r\n                     <QueryBuilderIcon/>\r\n                     <EqualizerIcon/>\r\n                </div>\r\n                <div className={classes.headerright}>\r\n                    <WbSunnyIcon/>\r\n                    <ChatBubbleOutlineIcon/>\r\n                    <SettingsIcon/>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\teammates\\index.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\sidebar.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\constants.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\roles\\index.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\companies\\index.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\projects\\index.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\forms\\index.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\modules\\root\\index.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\services\\graphql.ts",["134","135"],"\r\nimport {\r\n  ApolloClient,\r\n  createHttpLink,\r\n  InMemoryCache\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"https://polar-wildwood-69899.herokuapp.com/graphql\", //http link uri\r\n});\r\n\r\nconst authLink = setContext((operation, context) => {\r\n  const role = operation?.operationName;\r\n  const token = \"\";\r\n  if (token === null) {\r\n    return {};\r\n  } else {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        // 'x-hasura-role': role //uncomment this \r\n      },\r\n    };\r\n  }\r\n});\r\n\r\n// const wsLink = new WebSocketLink({\r\n//   uri: `ws://localhost:4000/graphql`, //ws link uri\r\n//   options: {\r\n//     reconnect: true,\r\n//     connectionParams: {\r\n//       authToken: \"\", //pass the token hera\r\n//     },\r\n//   },\r\n// });\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors) {\r\n    graphQLErrors.map(({ message, locations, extensions }) => {\r\n      switch (extensions?.code) {\r\n        case \"access-denied\":\r\n        case \"not-found\":\r\n        case \"validation-failed\": {\r\n          // show notification\r\n          break;\r\n        }\r\n        case \"invalid-jwt\": {\r\n          // logout and remove jwt token\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n  if (networkError) {\r\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n    console.log(`[Network error]: ${networkError}`);\r\n  }\r\n});\r\n\r\n// using the ability to split links, you can send data to each link\r\n// depending on what kind of operation is being sent\r\n\r\n\r\n// const link = split(\r\n//   // split based on operation type\r\n//   ({ query }) => {\r\n//     const { kind, operation }: Definintion = getMainDefinition(query);\r\n//     return kind === \"OperationDefinition\" && operation === \"subscription\";\r\n//   },\r\n//   wsLink,\r\n//   httpLink\r\n// );\r\n\r\nexport const client = new ApolloClient({\r\n  link: errorLink.concat(authLink.concat(httpLink)),\r\n  cache: new InMemoryCache(),\r\n});\r\n","C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\graphql-models\\projects.ts",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\components\\projectItem.tsx",[],"C:\\Users\\PushkarBhadur\\Documents\\Prototyping\\webapp\\src\\utils\\role.ts",[],["136","137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":35,"nodeType":"144","messageId":"145","endLine":1,"endColumn":40},{"ruleId":"142","severity":1,"message":"146","line":1,"column":42,"nodeType":"144","messageId":"145","endLine":1,"endColumn":48},{"ruleId":"142","severity":1,"message":"147","line":2,"column":17,"nodeType":"144","messageId":"145","endLine":2,"endColumn":25},{"ruleId":"142","severity":1,"message":"148","line":2,"column":27,"nodeType":"144","messageId":"145","endLine":2,"endColumn":31},{"ruleId":"142","severity":1,"message":"149","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":16},{"ruleId":"142","severity":1,"message":"150","line":10,"column":8,"nodeType":"144","messageId":"145","endLine":10,"endColumn":13},{"ruleId":"142","severity":1,"message":"151","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":14},{"ruleId":"138","replacedBy":"152"},{"ruleId":"140","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":15,"column":40,"nodeType":"156","messageId":"157","endLine":15,"endColumn":42},{"ruleId":"158","severity":1,"message":"159","line":45,"column":22,"nodeType":"160","endLine":45,"endColumn":52},{"ruleId":"142","severity":1,"message":"161","line":15,"column":9,"nodeType":"144","messageId":"145","endLine":15,"endColumn":13},{"ruleId":"154","severity":1,"message":"162","line":41,"column":60,"nodeType":"156","messageId":"163","endLine":41,"endColumn":62},{"ruleId":"138","replacedBy":"164"},{"ruleId":"140","replacedBy":"165"},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Suspense' is defined but never used.","'lazy' is defined but never used.","'Fallback' is defined but never used.","'Login' is defined but never used.","'signup' is defined but never used.",["166"],["167"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'role' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside",["166"],["167"],"no-global-assign","no-unsafe-negation"]